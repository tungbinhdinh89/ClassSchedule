// <auto-generated />
using System;
using ClassSchedule.Core.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassSchedule.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassSchedule.Core.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Trung tâm tiếng anh Kapla"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trường mầm non Thuỷ Tiên 2"
                        });
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "04 Phạm Hùng, Quận 8"
                        },
                        new
                        {
                            Id = 2,
                            Address = "30 đường số 8 KDC Đại Phúc, Bình Hưng, Bình Chánh"
                        });
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            Date = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            SubjectId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            Date = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            SubjectId = 2,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 2,
                            Date = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            SubjectId = 3,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            Date = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            SubjectId = 4,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 1,
                            Date = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            SubjectId = 5,
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toán"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Văn"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Anh văn"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hội họa"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bóng đá"
                        });
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nguyễn Văn A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trần Thị B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lê Văn C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hoàng Thị D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Phạm Văn E"
                        });
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Schedule", b =>
                {
                    b.HasOne("ClassSchedule.Core.Entities.Class", "Class")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassSchedule.Core.Entities.Location", "Location")
                        .WithMany("Schedules")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassSchedule.Core.Entities.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassSchedule.Core.Entities.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Location");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Class", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Location", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Subject", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ClassSchedule.Core.Entities.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
